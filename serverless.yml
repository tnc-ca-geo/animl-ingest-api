org: animl
app: animl
service: animl-ingest-api

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: us-west-2
  profile: animl

  ecr:
    images:
      ingest-api:
        path: ./api/
  iam:
    role:
      managedPolicies:
        - 'arn:aws:iam::aws:policy/AWSLambdaExecute'
      statements:
        - Effect: 'Allow'
          Action:
            - 's3:PutObject'
            - 's3:HeadObject'
          Resource:
            - arn:aws:s3:::animl-images-ingestion-${opt:stage, self:provider.stage, 'dev'}
            - arn:aws:s3:::animl-images-ingestion-${opt:stage, self:provider.stage, 'dev'}/*
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - ssm:GetParameters
          Resource:
            - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*

  environment:
    STAGE: ${opt:stage, self:provider.stage, 'dev'}
    BUCKET: animl-images-ingestion-${opt:stage, self:provider.stage, 'dev'}
    SECRET: ${ssm:/images/ingestion-api-${self:provider.stage}}
    LOGIN_ID: "{{resolve:secretsmanager:ingest-api-key-${opt:stage, self:provider.stage, 'dev'}:SecretString:id:AWSCURRENT}}"
    LOGIN_TOKEN: "{{resolve:secretsmanager:ingest-api-key-${opt:stage, self:provider.stage, 'dev'}:SecretString:token:AWSCURRENT}}"

functions:
  IngestAPI:
    image:
      name: ingest-api
    name: IngestAPI-${opt:stage, self:provider.stage, 'dev'}
    timeout: 15
    events:
      - httpApi: '*'

resources:
  Resources:
    apiKey:
      Type: AWS::SecretsManager::Secret
      Properties:
        Description: API Key that will allow access for the APIs
        GenerateSecretString:
            GenerateStringKey: token
            SecretStringTemplate: '{"id": "animl"}'
        Name: ingest-api-key-${opt:stage, self:provider.stage, 'dev'}

